// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/easycar.proto

package proto

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Err int32

const (
	Err_CODE_SUCCESS Err = 0
	Err_CODE_FAILED  Err = 1
)

// Enum value maps for Err.
var (
	Err_name = map[int32]string{
		0: "CODE_SUCCESS",
		1: "CODE_FAILED",
	}
	Err_value = map[string]int32{
		"CODE_SUCCESS": 0,
		"CODE_FAILED":  1,
	}
)

func (x Err) Enum() *Err {
	p := new(Err)
	*p = x
	return p
}

func (x Err) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Err) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_easycar_proto_enumTypes[0].Descriptor()
}

func (Err) Type() protoreflect.EnumType {
	return &file_proto_easycar_proto_enumTypes[0]
}

func (x Err) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Err.Descriptor instead.
func (Err) EnumDescriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{0}
}

type TranType int32

const (
	TranType_UNKnow TranType = 0
	TranType_TCC    TranType = 1
	TranType_SAGE   TranType = 2
)

// Enum value maps for TranType.
var (
	TranType_name = map[int32]string{
		0: "UNKnow",
		1: "TCC",
		2: "SAGE",
	}
	TranType_value = map[string]int32{
		"UNKnow": 0,
		"TCC":    1,
		"SAGE":   2,
	}
)

func (x TranType) Enum() *TranType {
	p := new(TranType)
	*p = x
	return p
}

func (x TranType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TranType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_easycar_proto_enumTypes[1].Descriptor()
}

func (TranType) Type() protoreflect.EnumType {
	return &file_proto_easycar_proto_enumTypes[1]
}

func (x TranType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TranType.Descriptor instead.
func (TranType) EnumDescriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{1}
}

type Action int32

const (
	Action_UnKnowTransactionType Action = 0
	Action_Try                   Action = 1
	Action_Confirm               Action = 2
	Action_Cancel                Action = 3
	Action_Normal                Action = 4
	Action_Compensation          Action = 5
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "UnKnowTransactionType",
		1: "Try",
		2: "Confirm",
		3: "Cancel",
		4: "Normal",
		5: "Compensation",
	}
	Action_value = map[string]int32{
		"UnKnowTransactionType": 0,
		"Try":                   1,
		"Confirm":               2,
		"Cancel":                3,
		"Normal":                4,
		"Compensation":          5,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_easycar_proto_enumTypes[2].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_proto_easycar_proto_enumTypes[2]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{2}
}

type BranchState int32

const (
	BranchState_UnknowState BranchState = 0
	BranchState_Ready       BranchState = 1
	BranchState_Retrying    BranchState = 2
	BranchState_Success     BranchState = 3
	BranchState_FailState   BranchState = 4
)

// Enum value maps for BranchState.
var (
	BranchState_name = map[int32]string{
		0: "UnknowState",
		1: "Ready",
		2: "Retrying",
		3: "Success",
		4: "FailState",
	}
	BranchState_value = map[string]int32{
		"UnknowState": 0,
		"Ready":       1,
		"Retrying":    2,
		"Success":     3,
		"FailState":   4,
	}
)

func (x BranchState) Enum() *BranchState {
	p := new(BranchState)
	*p = x
	return p
}

func (x BranchState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BranchState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_easycar_proto_enumTypes[3].Descriptor()
}

func (BranchState) Type() protoreflect.EnumType {
	return &file_proto_easycar_proto_enumTypes[3]
}

func (x BranchState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BranchState.Descriptor instead.
func (BranchState) EnumDescriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{3}
}

type GlobalState int32

const (
	GlobalState_GLOBAL_DEFAULT   GlobalState = 0
	GlobalState_Begin            GlobalState = 1
	GlobalState_Phase1Processing GlobalState = 2
	GlobalState_Phase1Retrying   GlobalState = 3
	GlobalState_Phase1Failed     GlobalState = 4
	GlobalState_Phase1Success    GlobalState = 5
	GlobalState_Phase2Processing GlobalState = 6
	GlobalState_Phase2Retrying   GlobalState = 7
	GlobalState_Phase2Failed     GlobalState = 8
	GlobalState_Phase2Success    GlobalState = 9
)

// Enum value maps for GlobalState.
var (
	GlobalState_name = map[int32]string{
		0: "GLOBAL_DEFAULT",
		1: "Begin",
		2: "Phase1Processing",
		3: "Phase1Retrying",
		4: "Phase1Failed",
		5: "Phase1Success",
		6: "Phase2Processing",
		7: "Phase2Retrying",
		8: "Phase2Failed",
		9: "Phase2Success",
	}
	GlobalState_value = map[string]int32{
		"GLOBAL_DEFAULT":   0,
		"Begin":            1,
		"Phase1Processing": 2,
		"Phase1Retrying":   3,
		"Phase1Failed":     4,
		"Phase1Success":    5,
		"Phase2Processing": 6,
		"Phase2Retrying":   7,
		"Phase2Failed":     8,
		"Phase2Success":    9,
	}
)

func (x GlobalState) Enum() *GlobalState {
	p := new(GlobalState)
	*p = x
	return p
}

func (x GlobalState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GlobalState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_easycar_proto_enumTypes[4].Descriptor()
}

func (GlobalState) Type() protoreflect.EnumType {
	return &file_proto_easycar_proto_enumTypes[4]
}

func (x GlobalState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GlobalState.Descriptor instead.
func (GlobalState) EnumDescriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{4}
}

type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GId      string                `protobuf:"bytes,1,opt,name=gId,proto3" json:"gId,omitempty"`
	Branches []*RegisterReq_Branch `protobuf:"bytes,2,rep,name=branches,proto3" json:"branches,omitempty"`
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_easycar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_easycar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterReq) GetGId() string {
	if x != nil {
		return x.GId
	}
	return ""
}

func (x *RegisterReq) GetBranches() []*RegisterReq_Branch {
	if x != nil {
		return x.Branches
	}
	return nil
}

type RegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_easycar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_easycar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{1}
}

type BeginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GId string `protobuf:"bytes,1,opt,name=gId,proto3" json:"gId,omitempty"`
}

func (x *BeginResp) Reset() {
	*x = BeginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_easycar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginResp) ProtoMessage() {}

func (x *BeginResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_easycar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginResp.ProtoReflect.Descriptor instead.
func (*BeginResp) Descriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{2}
}

func (x *BeginResp) GetGId() string {
	if x != nil {
		return x.GId
	}
	return ""
}

type StartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GId string `protobuf:"bytes,1,opt,name=gId,proto3" json:"gId,omitempty"`
}

func (x *StartReq) Reset() {
	*x = StartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_easycar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReq) ProtoMessage() {}

func (x *StartReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_easycar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReq.ProtoReflect.Descriptor instead.
func (*StartReq) Descriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{3}
}

func (x *StartReq) GetGId() string {
	if x != nil {
		return x.GId
	}
	return ""
}

type StartResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State GlobalState `protobuf:"varint,1,opt,name=state,proto3,enum=proto.GlobalState" json:"state,omitempty"`
}

func (x *StartResp) Reset() {
	*x = StartResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_easycar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResp) ProtoMessage() {}

func (x *StartResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_easycar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResp.ProtoReflect.Descriptor instead.
func (*StartResp) Descriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{4}
}

func (x *StartResp) GetState() GlobalState {
	if x != nil {
		return x.State
	}
	return GlobalState_GLOBAL_DEFAULT
}

type CommitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GId string `protobuf:"bytes,1,opt,name=gId,proto3" json:"gId,omitempty"`
}

func (x *CommitReq) Reset() {
	*x = CommitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_easycar_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitReq) ProtoMessage() {}

func (x *CommitReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_easycar_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitReq.ProtoReflect.Descriptor instead.
func (*CommitReq) Descriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{5}
}

func (x *CommitReq) GetGId() string {
	if x != nil {
		return x.GId
	}
	return ""
}

type CommitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GId string `protobuf:"bytes,1,opt,name=gId,proto3" json:"gId,omitempty"`
}

func (x *CommitResp) Reset() {
	*x = CommitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_easycar_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitResp) ProtoMessage() {}

func (x *CommitResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_easycar_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitResp.ProtoReflect.Descriptor instead.
func (*CommitResp) Descriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{6}
}

func (x *CommitResp) GetGId() string {
	if x != nil {
		return x.GId
	}
	return ""
}

type RollBckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GId string `protobuf:"bytes,1,opt,name=gId,proto3" json:"gId,omitempty"`
}

func (x *RollBckReq) Reset() {
	*x = RollBckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_easycar_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollBckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollBckReq) ProtoMessage() {}

func (x *RollBckReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_easycar_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollBckReq.ProtoReflect.Descriptor instead.
func (*RollBckReq) Descriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{7}
}

func (x *RollBckReq) GetGId() string {
	if x != nil {
		return x.GId
	}
	return ""
}

type RollBckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GId string `protobuf:"bytes,1,opt,name=gId,proto3" json:"gId,omitempty"`
}

func (x *RollBckResp) Reset() {
	*x = RollBckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_easycar_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollBckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollBckResp) ProtoMessage() {}

func (x *RollBckResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_easycar_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollBckResp.ProtoReflect.Descriptor instead.
func (*RollBckResp) Descriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{8}
}

func (x *RollBckResp) GetGId() string {
	if x != nil {
		return x.GId
	}
	return ""
}

type GetStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GId string `protobuf:"bytes,1,opt,name=gId,proto3" json:"gId,omitempty"`
}

func (x *GetStateReq) Reset() {
	*x = GetStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_easycar_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateReq) ProtoMessage() {}

func (x *GetStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_easycar_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateReq.ProtoReflect.Descriptor instead.
func (*GetStateReq) Descriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{9}
}

func (x *GetStateReq) GetGId() string {
	if x != nil {
		return x.GId
	}
	return ""
}

type GetStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State GlobalState `protobuf:"varint,1,opt,name=state,proto3,enum=proto.GlobalState" json:"state,omitempty"` // todo add branches state?
}

func (x *GetStateResp) Reset() {
	*x = GetStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_easycar_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateResp) ProtoMessage() {}

func (x *GetStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_easycar_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateResp.ProtoReflect.Descriptor instead.
func (*GetStateResp) Descriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{10}
}

func (x *GetStateResp) GetState() GlobalState {
	if x != nil {
		return x.State
	}
	return GlobalState_GLOBAL_DEFAULT
}

type RegisterReq_Branch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri       string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	ReqData   string   `protobuf:"bytes,2,opt,name=reqData,proto3" json:"reqData,omitempty"`
	ReqHeader string   `protobuf:"bytes,3,opt,name=reqHeader,proto3" json:"reqHeader,omitempty"`
	TranType  TranType `protobuf:"varint,4,opt,name=tranType,proto3,enum=proto.TranType" json:"tranType,omitempty"`
	Protocol  string   `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Action    Action   `protobuf:"varint,6,opt,name=action,proto3,enum=proto.Action" json:"action,omitempty"`
	Level     int32    `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *RegisterReq_Branch) Reset() {
	*x = RegisterReq_Branch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_easycar_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq_Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq_Branch) ProtoMessage() {}

func (x *RegisterReq_Branch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_easycar_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq_Branch.ProtoReflect.Descriptor instead.
func (*RegisterReq_Branch) Descriptor() ([]byte, []int) {
	return file_proto_easycar_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RegisterReq_Branch) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *RegisterReq_Branch) GetReqData() string {
	if x != nil {
		return x.ReqData
	}
	return ""
}

func (x *RegisterReq_Branch) GetReqHeader() string {
	if x != nil {
		return x.ReqHeader
	}
	return ""
}

func (x *RegisterReq_Branch) GetTranType() TranType {
	if x != nil {
		return x.TranType
	}
	return TranType_UNKnow
}

func (x *RegisterReq_Branch) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *RegisterReq_Branch) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_UnKnowTransactionType
}

func (x *RegisterReq_Branch) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

var File_proto_easycar_proto protoreflect.FileDescriptor

var file_proto_easycar_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x61, 0x73, 0x79, 0x63, 0x61, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8d, 0x03, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x1b, 0x0a, 0x03, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x32, 0x52, 0x03, 0x67, 0x49, 0x64, 0x12, 0x35, 0x0a,
	0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x65, 0x73, 0x1a, 0xa9, 0x02, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12,
	0x1c, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xab, 0x02, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04,
	0x18, 0x01, 0x18, 0x02, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xfa, 0x42, 0x15, 0x72, 0x13, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x52, 0x05, 0x68,
	0x74, 0x74, 0x70, 0x73, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0x82, 0x01, 0x0a, 0x18, 0x01, 0x18, 0x02, 0x18,
	0x03, 0x18, 0x04, 0x18, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42,
	0x08, 0x1a, 0x06, 0x18, 0x9f, 0x8d, 0x06, 0x28, 0x01, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x1d, 0x0a, 0x09, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x49, 0x64, 0x22,
	0x27, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x03, 0x67,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x01, 0x18, 0x32, 0x52, 0x03, 0x67, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x28, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x03,
	0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x01, 0x18, 0x32, 0x52, 0x03, 0x67, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x03, 0x67, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x32, 0x52,
	0x03, 0x67, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x6c, 0x42, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x03, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x32, 0x52, 0x03, 0x67, 0x49, 0x64, 0x22,
	0x2a, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x6c, 0x42, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b,
	0x0a, 0x03, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x72, 0x04, 0x10, 0x01, 0x18, 0x32, 0x52, 0x03, 0x67, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x03, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01,
	0x18, 0x32, 0x52, 0x03, 0x67, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2a, 0x28, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x29, 0x0a, 0x08, 0x54,
	0x72, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x4b, 0x6e, 0x6f,
	0x77, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x43, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x53, 0x41, 0x47, 0x45, 0x10, 0x02, 0x2a, 0x63, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x15, 0x55, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x54,
	0x72, 0x79, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x10, 0x03, 0x12, 0x0a, 0x0a,
	0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x6d,
	0x70, 0x65, 0x6e, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x2a, 0x53, 0x0a, 0x0b, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x79, 0x69,
	0x6e, 0x67, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x03, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x04,
	0x2a, 0xca, 0x01, 0x0a, 0x0b, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x0e, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55,
	0x4c, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x50, 0x68, 0x61, 0x73, 0x65, 0x31, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x31, 0x52,
	0x65, 0x74, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x31, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x50,
	0x68, 0x61, 0x73, 0x65, 0x31, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x05, 0x12, 0x14,
	0x0a, 0x10, 0x50, 0x68, 0x61, 0x73, 0x65, 0x32, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x32, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x32, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x32, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x09, 0x32, 0xe0, 0x03,
	0x0a, 0x07, 0x45, 0x61, 0x73, 0x79, 0x43, 0x61, 0x72, 0x12, 0x4c, 0x0a, 0x05, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x65, 0x61, 0x73, 0x79, 0x63, 0x61, 0x72, 0x2f, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x51, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x65, 0x61, 0x73, 0x79, 0x63, 0x61, 0x72, 0x2f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x45, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e,
	0x2f, 0x65, 0x61, 0x73, 0x79, 0x63, 0x61, 0x72, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0x49, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x65, 0x61, 0x73, 0x79, 0x63,
	0x61, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x4f, 0x0a, 0x08,
	0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x42, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x42, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x65, 0x61, 0x73, 0x79, 0x63, 0x61,
	0x72, 0x2f, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x12, 0x51, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x65, 0x61, 0x73,
	0x79, 0x63, 0x61, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a,
	0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77,
	0x75, 0x71, 0x69, 0x6e, 0x71, 0x69, 0x61, 0x6e, 0x67, 0x2f, 0x65, 0x61, 0x73, 0x79, 0x63, 0x61,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_easycar_proto_rawDescOnce sync.Once
	file_proto_easycar_proto_rawDescData = file_proto_easycar_proto_rawDesc
)

func file_proto_easycar_proto_rawDescGZIP() []byte {
	file_proto_easycar_proto_rawDescOnce.Do(func() {
		file_proto_easycar_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_easycar_proto_rawDescData)
	})
	return file_proto_easycar_proto_rawDescData
}

var file_proto_easycar_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_easycar_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_easycar_proto_goTypes = []interface{}{
	(Err)(0),                   // 0: proto.Err
	(TranType)(0),              // 1: proto.TranType
	(Action)(0),                // 2: proto.Action
	(BranchState)(0),           // 3: proto.BranchState
	(GlobalState)(0),           // 4: proto.GlobalState
	(*RegisterReq)(nil),        // 5: proto.RegisterReq
	(*RegisterResp)(nil),       // 6: proto.RegisterResp
	(*BeginResp)(nil),          // 7: proto.BeginResp
	(*StartReq)(nil),           // 8: proto.StartReq
	(*StartResp)(nil),          // 9: proto.StartResp
	(*CommitReq)(nil),          // 10: proto.CommitReq
	(*CommitResp)(nil),         // 11: proto.CommitResp
	(*RollBckReq)(nil),         // 12: proto.RollBckReq
	(*RollBckResp)(nil),        // 13: proto.RollBckResp
	(*GetStateReq)(nil),        // 14: proto.GetStateReq
	(*GetStateResp)(nil),       // 15: proto.GetStateResp
	(*RegisterReq_Branch)(nil), // 16: proto.RegisterReq.Branch
	(*emptypb.Empty)(nil),      // 17: google.protobuf.Empty
}
var file_proto_easycar_proto_depIdxs = []int32{
	16, // 0: proto.RegisterReq.branches:type_name -> proto.RegisterReq.Branch
	4,  // 1: proto.StartResp.state:type_name -> proto.GlobalState
	4,  // 2: proto.GetStateResp.state:type_name -> proto.GlobalState
	1,  // 3: proto.RegisterReq.Branch.tranType:type_name -> proto.TranType
	2,  // 4: proto.RegisterReq.Branch.action:type_name -> proto.Action
	17, // 5: proto.EasyCar.Begin:input_type -> google.protobuf.Empty
	5,  // 6: proto.EasyCar.Register:input_type -> proto.RegisterReq
	8,  // 7: proto.EasyCar.Start:input_type -> proto.StartReq
	10, // 8: proto.EasyCar.Commit:input_type -> proto.CommitReq
	12, // 9: proto.EasyCar.Rollback:input_type -> proto.RollBckReq
	14, // 10: proto.EasyCar.GetState:input_type -> proto.GetStateReq
	7,  // 11: proto.EasyCar.Begin:output_type -> proto.BeginResp
	6,  // 12: proto.EasyCar.Register:output_type -> proto.RegisterResp
	9,  // 13: proto.EasyCar.Start:output_type -> proto.StartResp
	11, // 14: proto.EasyCar.Commit:output_type -> proto.CommitResp
	13, // 15: proto.EasyCar.Rollback:output_type -> proto.RollBckResp
	15, // 16: proto.EasyCar.GetState:output_type -> proto.GetStateResp
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_easycar_proto_init() }
func file_proto_easycar_proto_init() {
	if File_proto_easycar_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_easycar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_easycar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_easycar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_easycar_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_easycar_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_easycar_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_easycar_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_easycar_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollBckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_easycar_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollBckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_easycar_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_easycar_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_easycar_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq_Branch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_easycar_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_easycar_proto_goTypes,
		DependencyIndexes: file_proto_easycar_proto_depIdxs,
		EnumInfos:         file_proto_easycar_proto_enumTypes,
		MessageInfos:      file_proto_easycar_proto_msgTypes,
	}.Build()
	File_proto_easycar_proto = out.File
	file_proto_easycar_proto_rawDesc = nil
	file_proto_easycar_proto_goTypes = nil
	file_proto_easycar_proto_depIdxs = nil
}
