syntax = "proto3";

package proto;

option go_package = "/proto";

import "google/protobuf/empty.proto";


service EasyCar {
  rpc Begin(google.protobuf.Empty)returns(BeginResp){}
  rpc Register(RegisterReq)returns(RegisterResp){}
  rpc Commit(CommitReq)returns(CommitResp){}
  rpc RollBack(RollBackReq)returns(RollBackResp){}
  rpc Abort(AbortReq) returns(AbortResp){}
  rpc GetState(GetStateReq) returns(GetStateResp){}
}


enum Err {
  CODE_SUCCESS = 0;
  CODE_FAILED = 1;
}

enum TranType {
  UNKnow = 0;
  TCC = 1;
  SAGE = 2;
}
enum Action {
  UnKnowTransactionType = 0;
  Try = 1;
  Confirm = 2;
  Cancel = 3;
  Normal = 4;
  Compensation = 5;
}

enum BranchState {
  UnknowState = 0;
  Ready = 1;
  Retrying = 2;
  Success = 3;
  FailState = 4;
}



message RegisterReq {
  message Branch {
    string BranchId = 1;
    string Uri = 2;
    string ReqData = 3;
    TranType TranType = 4;
    // todo remove pid?
    string Pid = 5;
    string Protocol = 6;
    Action Action = 7;
    BranchState State = 8;
    // todo remove pid?
    int32 Level = 9;
  }
  string GId = 1;
  repeated Branch branches = 2;
}
message RegisterResp {
}


enum GlobalState {
  GLOBAL_DEFAULT = 0;
  Begin = 1;
  GlobalCommitting = 2;
  GlobalCommitted = 3;
  GlobalCommitRetrying = 4;
  GlobalCommitFailed = 5;
  GlobalRollBacking = 6;
  GlobalRollBacked = 7;
  GlobalRollBackRetrying = 8;
  GlobalRollBackFailed = 9;
}



message BeginReq {
  TranType TranType = 1;
}

message BeginResp {
  string GId = 1;
}

message CommitReq {
  string GId = 1;
}
message CommitResp {
  GlobalState state = 1;
}


message AbortReq {
  string GId = 1;
}

message AbortResp {
}

message RollBackReq {
  string GId = 1;
}

message RollBackResp{
  GlobalState state = 1;
}

message GetStateReq {
  string GId = 1;
}

message GetStateResp {
  GlobalState state = 1;
  // todo add branches state?
}